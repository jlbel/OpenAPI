openapi: 3.0.3
info:
  title: Электронная библиотека OpenAPI Specification 3.0
  version: 0.0.1
servers:
    - url: https://http://localhost:8080/api/v1
paths:
  /books:
    get:
      description: Возвращает все книги из библиотеки
      summary: Метод для получения книг
      tags:
        - Books
      operationId: getAllBooks
      responses:
        '200':
          description: Успешный ответ со списком книг
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Books"
        'default':
          description: Произошка ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
    post:
      description: Добавляет новую книгу в библиотеку
      summary: Метод для добавления книги
      tags:
        - Books
      operationId: postBook
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Book"
      responses:
        '200':
          description: Успешный ответ с созданной книгой
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        'default':
          description: Произошка ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      
 
  /books/{book_id}:
    get:
      description: Возвращает книгу по ID
      summary: Метод для получения книги по идентификатору
      tags:
        - Books
      operationId: getBookByID
      parameters:
        - name: book_id
          in: path
          required: true
          description: Идентификатор книги
          schema:
            type: string
            example: 12
      responses:
        '200':
          description: Успешный ответ с нужной книгой
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        'default':
          description: Произошка ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
    delete:
      description: Удаляет книгу по ID
      summary: Метод для удаления книги по идентификатору
      tags:
        - Books
      operationId: deleteBookByID
      parameters:
        - name: book_id
          in: path
          required: true
          description: Идентификатор книги
          schema:
            type: string
            example: 12
      responses:
        '200':
          description: Успешное удаление
          content:
            application/json: {}
        'default':
          description: Произошка ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"  
                
components:
  schemas:
    Book:
      type: object
      required:
        - id
        - title
        - available
      properties: 
        id:
          type: integer
          example: 17
        title: 
          type: string
          example: The Great Gatsby
        author:
          type: string
          example: Harper Lee
        genre:
          type: string
          example: Fiction
        rating:
          type: number
          example: 2.2
        available:
          type: boolean
          example: true
    Books:
      type: array
      items: 
        $ref: "#/components/schemas/Book"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
        message:
          type: string
